{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 692,
  "lineage": "444edd4f-94d3-f65a-c673-911cb8494067",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana_ui",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "grafana",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "12.1.1",
              "chart": "grafana",
              "first_deployed": 1759111564,
              "last_deployed": 1759111564,
              "name": "grafana",
              "namespace": "tec-test-ns",
              "notes": "1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace tec-test-ns grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 3000 on the following DNS name from within your cluster:\n\n   grafana.tec-test-ns.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export NODE_PORT=$(kubectl get --namespace tec-test-ns -o jsonpath=\"{.spec.ports[0].nodePort}\" services grafana)\n     export NODE_IP=$(kubectl get nodes --namespace tec-test-ns -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n     echo http://$NODE_IP:$NODE_PORT\n\n3. Login with the password from step 1 and the username: admin\n",
              "revision": 1,
              "values": "{\"adminPassword\":\"admin\",\"adminUser\":\"admin\",\"env\":{\"GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS\":\"grafana-pyroscope-app,grafana-exploretraces-app,grafana-metricsdrilldown-app\"},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"size\":\"1Gi\",\"storageClassName\":\"\"},\"service\":{\"nodePort\":32030,\"port\":3000,\"type\":\"NodePort\"}}",
              "version": "10.0.0"
            },
            "name": "grafana",
            "namespace": "tec-test-ns",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "persistence:\n  enabled: true\n  storageClassName: \"\"\n  accessModes:\n    - ReadWriteOnce\n  size: 1Gi\n\nadminUser: admin\nadminPassword: admin\n\nservice:\n  type: NodePort\n  nodePort: 32030\n  port: 3000\n\nenv:\n  GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: grafana-pyroscope-app,grafana-exploretraces-app,grafana-metricsdrilldown-app\n"
            ],
            "verify": false,
            "version": "10.0.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "tec-test-ns",
            "release_name": "grafana"
          },
          "dependencies": [
            "kubernetes_namespace.tec_test_ns",
            "module.grafana.helm_release.loki",
            "module.grafana.helm_release.tempo",
            "module.otel_collector.helm_release.otel_collector",
            "module.prometheus.helm_release.prometheus",
            "module.python-app.kubernetes_deployment.tec-test-deployment",
            "module.python-app.kubernetes_service.tec-test-service"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "tec_test_ns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "tec-test-ns",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "tec-test-ns",
                "resource_version": "148111",
                "uid": "0a17e6b7-d50e-447f-a45c-bc8d7757dbe6"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "tec-test-ns"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.grafana",
      "mode": "managed",
      "type": "helm_release",
      "name": "loki",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "loki-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "loki",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v2.9.3",
              "chart": "loki-stack",
              "first_deployed": 1759111426,
              "last_deployed": 1759111426,
              "name": "loki",
              "namespace": "tec-test-ns",
              "notes": "Verify the application is working by running these commands:\n  kubectl --namespace tec-test-ns port-forward service/loki 3100\n  curl http://127.0.0.1:3100/api/prom/label\n\nThe Loki stack has been deployed to your cluster. Loki can now be added as a datasource in Grafana.\n\nSee http://docs.grafana.org/features/datasources/loki/ for more detail.\n\n***********************************************************************\n Welcome to Grafana Promtail\n Chart version: 6.15.5\n Promtail version: 2.9.3\n***********************************************************************\n\nVerify the application is working by running these commands:\n* kubectl --namespace tec-test-ns port-forward daemonset/loki-promtail 3101\n* curl http://127.0.0.1:3101/metrics\n",
              "revision": 1,
              "values": "{\"dashboard\":{\"default\":true,\"enabled\":true},\"grafana\":{\"enabled\":false},\"loki\":{\"config\":{\"schema_config\":{\"configs\":[{\"from\":\"2020-10-24\",\"index\":{\"period\":\"24h\",\"prefix\":\"index_\"},\"object_store\":\"filesystem\",\"schema\":\"v11\",\"store\":\"boltdb-shipper\"}]}},\"enabled\":true,\"persistence\":{\"enabled\":true,\"size\":\"10Gi\"}},\"promtail\":{\"config\":{\"clients\":[{\"url\":\"http://loki.tec-test-ns.svc.cluster.local:3100/loki/api/v1/push\"}],\"scrape_configs\":[{\"job_name\":\"kubernetes-pods\",\"kubernetes_sd_configs\":[{\"role\":\"pod\"}],\"relabel_configs\":[{\"source_labels\":[\"__meta_kubernetes_pod_label_app\"],\"target_label\":\"app\"},{\"source_labels\":[\"__meta_kubernetes_namespace\"],\"target_label\":\"namespace\"},{\"source_labels\":[\"__meta_kubernetes_pod_name\"],\"target_label\":\"pod\"}]}]},\"enabled\":true}}",
              "version": "2.10.2"
            },
            "name": "loki",
            "namespace": "tec-test-ns",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "loki:\n  enabled: true\n  persistence:\n    enabled: true\n    size: 10Gi\n  config:\n    schema_config:\n      configs:\n        - from: 2020-10-24\n          store: boltdb-shipper\n          object_store: filesystem\n          schema: v11\n          index:\n            prefix: index_\n            period: 24h\n\npromtail:\n  enabled: true\n  config:\n    clients:\n      - url: http://loki.tec-test-ns.svc.cluster.local:3100/loki/api/v1/push\n    scrape_configs:\n      - job_name: kubernetes-pods\n        kubernetes_sd_configs:\n          - role: pod\n        relabel_configs:\n          - source_labels: [__meta_kubernetes_pod_label_app]\n            target_label: app\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n\ngrafana:\n  enabled: false\n\ndashboard:\n  enabled: true\n  default: true\n"
            ],
            "verify": false,
            "version": "2.10.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "tec-test-ns",
            "release_name": "loki"
          },
          "dependencies": [
            "kubernetes_namespace.tec_test_ns"
          ]
        }
      ]
    },
    {
      "module": "module.grafana",
      "mode": "managed",
      "type": "helm_release",
      "name": "tempo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "tempo",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tempo",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "2.8.2",
              "chart": "tempo",
              "first_deployed": 1759111508,
              "last_deployed": 1759111508,
              "name": "tempo",
              "namespace": "tec-test-ns",
              "notes": "",
              "revision": 1,
              "values": "{\"persistence\":{\"enabled\":true,\"size\":\"10Gi\"},\"service\":{\"ports\":[{\"name\":\"http\",\"port\":3200},{\"name\":\"otlp-grpc\",\"port\":4317},{\"name\":\"otlp-http\",\"port\":4318}],\"type\":\"ClusterIP\"},\"tempo\":{\"storage\":{\"trace\":{\"backend\":\"local\",\"local\":{\"path\":\"/var/tempo/traces\"}}}}}",
              "version": "1.23.3"
            },
            "name": "tempo",
            "namespace": "tec-test-ns",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "tempo:\n  storage:\n    trace:\n      backend: local\n      local:\n        path: /var/tempo/traces\n\npersistence:\n  enabled: true\n  size: 10Gi\n\nservice:\n  type: ClusterIP\n  ports:\n    - name: http\n      port: 3200\n    - name: otlp-grpc\n      port: 4317\n    - name: otlp-http\n      port: 4318\n"
            ],
            "verify": false,
            "version": "1.23.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "tec-test-ns",
            "release_name": "tempo"
          },
          "dependencies": [
            "kubernetes_namespace.tec_test_ns",
            "module.grafana.helm_release.loki"
          ]
        }
      ]
    },
    {
      "module": "module.otel_collector",
      "mode": "managed",
      "type": "helm_release",
      "name": "otel_collector",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "opentelemetry-collector",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "otel-collector",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "0.136.0",
              "chart": "opentelemetry-collector",
              "first_deployed": 1759111558,
              "last_deployed": 1759111558,
              "name": "otel-collector",
              "namespace": "tec-test-ns",
              "notes": "\n\n\n[WARNING] No resource limits or requests were set. Consider setting resource requests and limits for your collector(s) via the `resources` field.\n\n[WARNING] \"useGOMEMLIMIT\" is enabled but memory limits have not been supplied so the GOMEMLIMIT env var could not be added. Solve this problem by setting resources.limits.memory or disabling useGOMEMLIMIT\n\n",
              "revision": 1,
              "values": "{\"config\":{\"exporters\":{\"debug\":{\"verbosity\":\"detailed\"},\"otlp/tempo\":{\"endpoint\":\"tempo.tec-test-ns.svc.cluster.local:4317\",\"tls\":{\"insecure\":true}}},\"receivers\":{\"otlp\":{\"protocols\":{\"grpc\":{\"endpoint\":\"0.0.0.0:4317\"},\"http\":{\"endpoint\":\"0.0.0.0:4318\"}}}},\"service\":{\"pipelines\":{\"traces\":{\"exporters\":[\"otlp/tempo\",\"debug\"],\"receivers\":[\"otlp\"]}}}},\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"otel/opentelemetry-collector-contrib\",\"tag\":\"latest\"},\"mode\":\"deployment\",\"replicaCount\":1}",
              "version": "0.136.1"
            },
            "name": "otel-collector",
            "namespace": "tec-test-ns",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://open-telemetry.github.io/opentelemetry-helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "mode: deployment\n\nimage:\n  repository: otel/opentelemetry-collector-contrib\n  tag: latest\n  pullPolicy: IfNotPresent\n\nconfig:\n  receivers:\n    otlp:\n      protocols:\n        grpc:\n          endpoint: 0.0.0.0:4317\n        http:\n          endpoint: 0.0.0.0:4318\n\n  exporters:\n    otlp/tempo:\n      endpoint: tempo.tec-test-ns.svc.cluster.local:4317\n      tls:\n        insecure: true\n\n    debug:\n      verbosity: detailed\n\n  service:\n    pipelines:\n      traces:\n        receivers: [\"otlp\"]\n        exporters: [\"otlp/tempo\", \"debug\"]\n\nreplicaCount: 1\n"
            ],
            "verify": false,
            "version": "0.136.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "tec-test-ns",
            "release_name": "otel-collector"
          },
          "dependencies": [
            "kubernetes_namespace.tec_test_ns",
            "module.grafana.helm_release.loki",
            "module.grafana.helm_release.tempo"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus",
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v0.85.0",
              "chart": "kube-prometheus-stack",
              "first_deployed": 1759111431,
              "last_deployed": 1759111431,
              "name": "prometheus",
              "namespace": "tec-test-ns",
              "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace tec-test-ns -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace tec-test-ns $POD_NAME 9100\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace tec-test-ns prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.tec-test-ns.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace tec-test-ns -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace tec-test-ns port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.tec-test-ns.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace tec-test-ns get pods -l \"release=prometheus\"\n\nGet Grafana 'admin' user password by running:\n\n  kubectl --namespace tec-test-ns get secrets prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 -d ; echo\n\nAccess Grafana local instance:\n\n  export POD_NAME=$(kubectl --namespace tec-test-ns get pod -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -oname)\n  kubectl --namespace tec-test-ns port-forward $POD_NAME 3000\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n",
              "revision": 1,
              "values": "{\"prometheus\":{\"prometheusSpec\":{\"additionalScrapeConfigs\":[{\"job_name\":\"tec-test-app\",\"static_configs\":[{\"targets\":[\"tec-test-service:80\"]}]}],\"scrapeInterval\":\"15s\",\"serviceMonitorSelectorNilUsesHelmValues\":false}}}",
              "version": "77.12.0"
            },
            "name": "prometheus",
            "namespace": "tec-test-ns",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "prometheus:\n  prometheusSpec:\n    serviceMonitorSelectorNilUsesHelmValues: false\n    scrapeInterval: 15s\n    additionalScrapeConfigs:\n      - job_name: \"tec-test-app\"\n        static_configs:\n          - targets: [\"tec-test-service:80\"]\n"
            ],
            "verify": false,
            "version": "77.12.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "tec-test-ns",
            "release_name": "prometheus"
          },
          "dependencies": [
            "kubernetes_namespace.tec_test_ns",
            "module.python-app.kubernetes_deployment.tec-test-deployment",
            "module.python-app.kubernetes_service.tec-test-service"
          ]
        }
      ]
    },
    {
      "module": "module.python-app",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "tec-test-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "tec-test-ns/tec-test-deployment",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "tec-test-python"
                },
                "name": "tec-test-deployment",
                "namespace": "tec-test-ns",
                "resource_version": "148141",
                "uid": "cfe5bac1-aabd-45e1-a7e1-7a60e23aa75c"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "tec-test-python"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "tec-test-python"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [],
                            "env_from": [],
                            "image": "technical-test:1.0.10",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "tec-test-deployment",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "apps/v1",
            "kind": "Deployment",
            "name": "tec-test-deployment",
            "namespace": "tec-test-ns"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_namespace.tec_test_ns"
          ]
        }
      ]
    },
    {
      "module": "module.python-app",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "tec-test-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "tec-test-ns/tec-test-service",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "tec-test-service",
                "namespace": "tec-test-ns",
                "resource_version": "148116",
                "uid": "36dc9ec3-35f1-45a7-a984-1a2a0cd6e691"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.106.11.193",
                "cluster_ips": [
                  "10.106.11.193"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 30080,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "tec-test-python"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Service",
            "name": "tec-test-service",
            "namespace": "tec-test-ns"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.tec_test_ns"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
